;Implementacija QuickSort-a.
AsmStart ;Umetnuti Assembler pocinje ovako, a zavrsava sa "AsmEnd".
	ispisPoruka=1 ;Ovako se rade pretprocesorski definesovi u FlatAssembleru.
	debug=0
	macro staviIntNaSistemskiStog x ;Da, ima on mocan pretprocesor.
	{
		sub esp,4
		fld dword [x]
		fistp dword [esp]
	}
	macro staviPokazivacNaSistemskiStog x
	{
		sub esp,4
		lea ebx,[x]
		mov [esp],ebx
	}
	macro staviStringNaSistemskiStog x
	{
		sub esp,4
		mov dword [esp],x
	}
	format PE console ; 'PE' je 32-bitna '.EXE' datoteka za Windows. 'PE64' je 64-bitna '.EXE' za Windows. 'MZ' je '.EXE' za DOS. 'ELF' je izvrsna datoteka za 32-bitni Linux, a 'ELF64' za 64-bitni.
	entry start

	include 'win32a.inc' ; Naredbe za komunikaciju s DLL-ovima.

	section '.text' code executable
	start:
if ispisPoruka=1 ; 'if' je ovdje assemblerska pretprocesorska naredba. 'If', s velikim 'i', je naredba grananja u AEC-u.
	jmp velicinaUnosa$
		velicinaUnosa db "Unesite koliko cete brojeva unijeti.",10,0
	velicinaUnosa$:
	staviStringNaSistemskiStog velicinaUnosa
	call [printf]
end if
	staviPokazivacNaSistemskiStog n
	jmp znakZaFloat$
		znakZaFloat db "%f",0
	znakZaFloat$:
	staviStringNaSistemskiStog znakZaFloat
	call [scanf]
	if ispisPoruka=1
		jmp pitajZaUnos$
			pitajZaUnos db "Unesite te brojeve:",10,0
		pitajZaUnos$:
		staviStringNaSistemskiStog pitajZaUnos
		call [printf]
	end if
AsmEnd
i:=0
brojac:=0
vrhStoga:=0
While i<n
	pokazivac:=4*i
	AsmStart
		fld dword [pokazivac]
		fistp dword [pokazivac]
		lea ebx,[original]
		add ebx,[pokazivac]
		staviPokazivacNaSistemskiStog ebx
		staviStringNaSistemskiStog znakZaFloat
		call [scanf]
	AsmEnd
	i:=i+1
EndWhile
AsmStart
	call [clock]
	mov [procesorskoVrijeme],eax
AsmEnd
razvrstanost:=0
i:=0
While i<n-1
	razvrstanost:=razvrstanost+(original(i)<original(i+1))
	i:=i+1
EndWhile
razvrstanost:=razvrstanost/((n-1)/2)-1
i:=2
While i<7 | i=7 ;Kada nisam stavio operator "<=" u svoj jezik.
	razvrstanostNa(i):=pow(abs(razvrstanost),i) ;Zato sto je "pow(x,y)" u tom mom jeziku samo sintakticki secer za "exp(ln(x)*y)", i to vraca "NaN" za x<=0. Nema ocitog nacina da se "pow" prevede na Assembler.
	If razvrstanost=0
		razvrstanostNa(i):=0
	EndIf
	If mod(i,2)=1 & razvrstanost<0
		razvrstanostNa(i):=-razvrstanostNa(i)
	EndIf
	i:=i+1
EndWhile
;f(n,s)=exp((ln(n)+ln(ln(n)))*1.05+(ln(n)-ln(ln(n)))*0.83*abs(2.38854*pow(s,7)-0.284258*pow(s,6)-1.87104*pow(s,5)+0.372637*pow(s,4)+0.167242*pow(s,3)-0.0884977*pow(s,2)+0.315119*s))
polinomPodApsolutnom:=2.38854*razvrstanostNa(7)-0.284258*razvrstanostNa(6)-1.87104*razvrstanostNa(5)+0.372637*razvrstanostNa(4)+0.167242*razvrstanostNa(3)-0.0884977*razvrstanostNa(2)+0.315119*razvrstanost
eNaKoju:=(ln(n)+ln(ln(n)))*1.05+(ln(n)-ln(ln(n)))*0.83*abs(polinomPodApsolutnom)
ocekivaniBrojUsporedbi:=exp(eNaKoju)
najmanjiCijeliBrojKojiSeMozeDodatiNaBrojac:=1
pomocniBrojac:=0
vrhStoga:=vrhStoga+1
stogSDonjimGranicama(vrhStoga):=0
stogSGornjimGranicama(vrhStoga):=n
While vrhStoga>0
	gornjaGranica:=stogSGornjimGranicama(vrhStoga)
	donjaGranica:=stogSDonjimGranicama(vrhStoga)
	vrhStoga:=vrhStoga-1
	gdjeJePivot:=donjaGranica
	i:=donjaGranica+1
	While i<gornjaGranica
		If original(i)<original(donjaGranica)
			gdjeJePivot:=gdjeJePivot+1
		EndIf
		i:=i++
	EndWhile
	staviManje:=donjaGranica
	staviVece:=gdjeJePivot+1
	pomocni(gdjeJePivot):=original(donjaGranica)
	i:=donjaGranica+1
	While i<gornjaGranica
		If original(i)<original(donjaGranica)
			pomocni(staviManje):=original(i)
			staviManje:=staviManje+1
		Else
			pomocni(staviVece):=original(i)
			staviVece:=staviVece+1
		EndIf
		pomocniBrojac:=pomocniBrojac+1
		If pomocniBrojac=najmanjiCijeliBrojKojiSeMozeDodatiNaBrojac
			brojac:=brojac+pomocniBrojac
			pomocniBrojac:=0
		EndIf
		i:=i+1
	EndWhile
	i:=donjaGranica
	While i<gornjaGranica
		original(i):=pomocni(i)
		i:=i+1
	EndWhile
	If gdjeJePivot<gornjaGranica-1
		vrhStoga:=vrhStoga+1
		stogSDonjimGranicama(vrhStoga):=gdjeJePivot+1
		stogSGornjimGranicama(vrhStoga):=gornjaGranica
	EndIf
	If gdjeJePivot>donjaGranica+1
		vrhStoga:=vrhStoga+1
		stogSDonjimGranicama(vrhStoga):=donjaGranica
		stogSGornjimGranicama(vrhStoga):=gdjeJePivot
	EndIf
	testZaPreljev:=brojac+najmanjiCijeliBrojKojiSeMozeDodatiNaBrojac ;Potrebna je posebna varijabla za to jer FPU interno radi s 80-bitnim brojevima, a CPU s 32-bitnim.
	If not(testZaPreljev>brojac)
		najmanjiCijeliBrojKojiSeMozeDodatiNaBrojac:=najmanjiCijeliBrojKojiSeMozeDodatiNaBrojac*2
		AsmStart
			if ispisPoruka=1
				jmp izvjesceOpreljevu$
					izvjesceOpreljevu db "Upozorenje: Brojac mozda nece sadrzavati tocan rezultat, dogodio se preljev na %d. iteraciji."
					db " Najveca ocekivana pogreska za ovaj preljev je %d krivo prebrojanih izvrsavanja unutarnje petlje.",10,0
				izvjesceOpreljevu$:
				fld dword [n]
				fld dword [najmanjiCijeliBrojKojiSeMozeDodatiNaBrojac]
				fsubp
				fabs
				fistp dword [esp+4]
				fld dword [brojac]
				fistp dword [esp]
				invoke printf,izvjesceOpreljevu
			end if		
		AsmEnd
	EndIf
EndWhile
AsmStart
	call [clock]
	sub eax,[procesorskoVrijeme]
	mov [procesorskoVrijeme],eax
if ispisPoruka=1
	jmp sortiraniNizJe$
		sortiraniNizJe db "Sortirani niz je:",10,0
	sortiraniNizJe$:
	staviStringNaSistemskiStog sortiraniNizJe
	call [printf]
end if
AsmEnd
i:=0
While i<n
	pokazivac:=4*i
	AsmStart
		lea ebx,[original]
		fld dword [pokazivac]
		fistp dword [pokazivac]
		add ebx,[pokazivac]
		fld dword [ebx]
		fstp qword [esp]
		staviStringNaSistemskiStog znakZaFloatPlusNoviRedPlusNulZnak
		call [printf]
	AsmEnd
	i:=i+1
EndWhile
AsmStart
if ispisPoruka=1
	staviIntNaSistemskiStog brojac
	staviStringNaSistemskiStog unutrasnjaPetljaString
	call [printf]
AsmEnd
	brojac:=n*ln(n)/ln(2)
AsmStart
	fld dword [brojac]
	fstp qword [esp]
	staviStringNaSistemskiStog slozenostString
	call [printf]
	push dword [procesorskoVrijeme]
	invoke printf,sortiranjeJeTrajalo
	fld dword [razvrstanost]
	fstp qword [esp]
	invoke printf,stringORazvrstanosti
	fld dword [ocekivaniBrojUsporedbi]
	fstp qword [esp+8] ;Zato sto "printf" iz MSVCRT-a za "%f" ocekuje 8-bajtni "double", i izgleda da ju nije moguce namjestiti da ocekuje 4-bajtni "float".
	fld dword [eNaKoju]
	fstp qword [esp]
	invoke printf,izvjestajOFormuli
	fld dword [polinomPodApsolutnom]
	fstp qword [esp]
	invoke printf,izvjestajOPolinomu
	invoke system,_pause ;"Press any key to continue..."
end if
invoke exit,0

;Deklaracije konstanti.
_pause db "PAUSE",0
znakZaCijeliBrojBroj db "%d",0
znakZaNoviRedPlusNulZnak db 10,0
znakZaFloatPlusNoviRedPlusNulZnak db "%f",10,0
unutrasnjaPetljaString db "Unutrasnja petlja izvrsila se %d puta.",10,0
slozenostString db "Ocekivani broj ponavljanja te petlje, po formuli n*log2(n), bio bi %.1f.",10,0
sortiranjeJeTrajalo db "Sortiranje je trajalo %d milisekundi.",10,0
stringORazvrstanosti db "Razvrstanost pocetnog niza (s) iznosila je: %f",10,0
izvjestajOFormuli db "Ocekivani broj usporedbi, po formuli: ",10
db "exp((ln(n)+ln(ln(n)))*1.05+(ln(n)-ln(ln(n)))*0.83*abs(2.38854*pow(s,7)-0.284258*pow(s,6)-1.87104*pow(s,5)+0.372637*pow(s,4)+0.167242*pow(s,3)-0.0884977*pow(s,2)+0.315119*s))",10
db "bio bi: exp(%f)=%f",10,0
izvjestajOPolinomu:
if debug=1
	db "Polinom pod apsolutnom vrijednosti iznosi: %f",10
end if
	db 0

section '.rdata' readable writable ; Deklaracije varijabli.
original dd 32768*4 DUP(?)
n dd ?
result dd ?
brojac dd ?
pokazivac dd ?
i dd ?
stogSDonjimGranicama dd 32768*4 DUP(?)
stogSGornjimGranicama dd 32768*4 DUP(?)
pomocni dd 32768*4 DUP(?)
vrhStoga dd ?
donjaGranica dd ?
gornjaGranica dd ?
staviVece dd ?
staviManje dd ?
gdjeJePivot dd ?
procesorskoVrijeme dd ?
razvrstanost dd ?
razvrstanostNa dd 8 DUP(?)
polinomPodApsolutnom dd ?
eNaKoju dd ?
ocekivaniBrojUsporedbi dd ?
najmanjiCijeliBrojKojiSeMozeDodatiNaBrojac dd ?
pomocniBrojac dd ?
testZaPreljev dd ?

section '.idata' data readable import ;Uvoz funkcija iz DLL-ova.
library msvcrt,'msvcrt.dll' ; "msvcrt.dll" je stara verzija Microsoft Visual C Runtime Libraryja dostupna u C:\Windows\System32\msvcrt.dll na Windows 95 i novijim.
import msvcrt,printf,'printf',system,'system',exit,'exit',scanf,'scanf',clock,'clock'
AsmEnd
